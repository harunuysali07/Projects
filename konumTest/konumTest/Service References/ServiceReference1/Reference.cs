//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace konumTest.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="konumbilgileri", Namespace="http://schemas.datacontract.org/2004/07/konumappservice")]
    [System.SerializableAttribute()]
    public partial class konumbilgileri : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string aciklamaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string adresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string timeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string yField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string aciklama {
            get {
                return this.aciklamaField;
            }
            set {
                if ((object.ReferenceEquals(this.aciklamaField, value) != true)) {
                    this.aciklamaField = value;
                    this.RaisePropertyChanged("aciklama");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string adres {
            get {
                return this.adresField;
            }
            set {
                if ((object.ReferenceEquals(this.adresField, value) != true)) {
                    this.adresField = value;
                    this.RaisePropertyChanged("adres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string time {
            get {
                return this.timeField;
            }
            set {
                if ((object.ReferenceEquals(this.timeField, value) != true)) {
                    this.timeField = value;
                    this.RaisePropertyChanged("time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string x {
            get {
                return this.xField;
            }
            set {
                if ((object.ReferenceEquals(this.xField, value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string y {
            get {
                return this.yField;
            }
            set {
                if ((object.ReferenceEquals(this.yField, value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/login", ReplyAction="http://tempuri.org/IService1/loginResponse")]
        int login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/login", ReplyAction="http://tempuri.org/IService1/loginResponse")]
        System.Threading.Tasks.Task<int> loginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/kayitol", ReplyAction="http://tempuri.org/IService1/kayitolResponse")]
        int kayitol(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/kayitol", ReplyAction="http://tempuri.org/IService1/kayitolResponse")]
        System.Threading.Tasks.Task<int> kayitolAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/takipet", ReplyAction="http://tempuri.org/IService1/takipetResponse")]
        int takipet(string takipciusername, string takipedilcekusername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/takipet", ReplyAction="http://tempuri.org/IService1/takipetResponse")]
        System.Threading.Tasks.Task<int> takipetAsync(string takipciusername, string takipedilcekusername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/onaylanmayantakipciler", ReplyAction="http://tempuri.org/IService1/onaylanmayantakipcilerResponse")]
        string[] onaylanmayantakipciler(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/onaylanmayantakipciler", ReplyAction="http://tempuri.org/IService1/onaylanmayantakipcilerResponse")]
        System.Threading.Tasks.Task<string[]> onaylanmayantakipcilerAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/takiponay", ReplyAction="http://tempuri.org/IService1/takiponayResponse")]
        int takiponay(string takipciusername, string takipedilcekusername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/takiponay", ReplyAction="http://tempuri.org/IService1/takiponayResponse")]
        System.Threading.Tasks.Task<int> takiponayAsync(string takipciusername, string takipedilcekusername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/takipdogrulama", ReplyAction="http://tempuri.org/IService1/takipdogrulamaResponse")]
        int takipdogrulama(string takipciusername, string takipedilcekusername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/takipdogrulama", ReplyAction="http://tempuri.org/IService1/takipdogrulamaResponse")]
        System.Threading.Tasks.Task<int> takipdogrulamaAsync(string takipciusername, string takipedilcekusername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/konumkaydet", ReplyAction="http://tempuri.org/IService1/konumkaydetResponse")]
        int konumkaydet(string x, string y, string adres, string time, string aciklama, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/konumkaydet", ReplyAction="http://tempuri.org/IService1/konumkaydetResponse")]
        System.Threading.Tasks.Task<int> konumkaydetAsync(string x, string y, string adres, string time, string aciklama, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/konumbilgial", ReplyAction="http://tempuri.org/IService1/konumbilgialResponse")]
        konumTest.ServiceReference1.konumbilgileri konumbilgial(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/konumbilgial", ReplyAction="http://tempuri.org/IService1/konumbilgialResponse")]
        System.Threading.Tasks.Task<konumTest.ServiceReference1.konumbilgileri> konumbilgialAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/takipedilenler", ReplyAction="http://tempuri.org/IService1/takipedilenlerResponse")]
        string[] takipedilenler(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/takipedilenler", ReplyAction="http://tempuri.org/IService1/takipedilenlerResponse")]
        System.Threading.Tasks.Task<string[]> takipedilenlerAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/kayitdogrulama", ReplyAction="http://tempuri.org/IService1/kayitdogrulamaResponse")]
        int kayitdogrulama(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/kayitdogrulama", ReplyAction="http://tempuri.org/IService1/kayitdogrulamaResponse")]
        System.Threading.Tasks.Task<int> kayitdogrulamaAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/takipred", ReplyAction="http://tempuri.org/IService1/takipredResponse")]
        int takipred(string username, string redusername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/takipred", ReplyAction="http://tempuri.org/IService1/takipredResponse")]
        System.Threading.Tasks.Task<int> takipredAsync(string username, string redusername);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : konumTest.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<konumTest.ServiceReference1.IService1>, konumTest.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int login(string username, string password) {
            return base.Channel.login(username, password);
        }
        
        public System.Threading.Tasks.Task<int> loginAsync(string username, string password) {
            return base.Channel.loginAsync(username, password);
        }
        
        public int kayitol(string username, string password) {
            return base.Channel.kayitol(username, password);
        }
        
        public System.Threading.Tasks.Task<int> kayitolAsync(string username, string password) {
            return base.Channel.kayitolAsync(username, password);
        }
        
        public int takipet(string takipciusername, string takipedilcekusername) {
            return base.Channel.takipet(takipciusername, takipedilcekusername);
        }
        
        public System.Threading.Tasks.Task<int> takipetAsync(string takipciusername, string takipedilcekusername) {
            return base.Channel.takipetAsync(takipciusername, takipedilcekusername);
        }
        
        public string[] onaylanmayantakipciler(string username) {
            return base.Channel.onaylanmayantakipciler(username);
        }
        
        public System.Threading.Tasks.Task<string[]> onaylanmayantakipcilerAsync(string username) {
            return base.Channel.onaylanmayantakipcilerAsync(username);
        }
        
        public int takiponay(string takipciusername, string takipedilcekusername) {
            return base.Channel.takiponay(takipciusername, takipedilcekusername);
        }
        
        public System.Threading.Tasks.Task<int> takiponayAsync(string takipciusername, string takipedilcekusername) {
            return base.Channel.takiponayAsync(takipciusername, takipedilcekusername);
        }
        
        public int takipdogrulama(string takipciusername, string takipedilcekusername) {
            return base.Channel.takipdogrulama(takipciusername, takipedilcekusername);
        }
        
        public System.Threading.Tasks.Task<int> takipdogrulamaAsync(string takipciusername, string takipedilcekusername) {
            return base.Channel.takipdogrulamaAsync(takipciusername, takipedilcekusername);
        }
        
        public int konumkaydet(string x, string y, string adres, string time, string aciklama, string username) {
            return base.Channel.konumkaydet(x, y, adres, time, aciklama, username);
        }
        
        public System.Threading.Tasks.Task<int> konumkaydetAsync(string x, string y, string adres, string time, string aciklama, string username) {
            return base.Channel.konumkaydetAsync(x, y, adres, time, aciklama, username);
        }
        
        public konumTest.ServiceReference1.konumbilgileri konumbilgial(string username) {
            return base.Channel.konumbilgial(username);
        }
        
        public System.Threading.Tasks.Task<konumTest.ServiceReference1.konumbilgileri> konumbilgialAsync(string username) {
            return base.Channel.konumbilgialAsync(username);
        }
        
        public string[] takipedilenler(string username) {
            return base.Channel.takipedilenler(username);
        }
        
        public System.Threading.Tasks.Task<string[]> takipedilenlerAsync(string username) {
            return base.Channel.takipedilenlerAsync(username);
        }
        
        public int kayitdogrulama(string username) {
            return base.Channel.kayitdogrulama(username);
        }
        
        public System.Threading.Tasks.Task<int> kayitdogrulamaAsync(string username) {
            return base.Channel.kayitdogrulamaAsync(username);
        }
        
        public int takipred(string username, string redusername) {
            return base.Channel.takipred(username, redusername);
        }
        
        public System.Threading.Tasks.Task<int> takipredAsync(string username, string redusername) {
            return base.Channel.takipredAsync(username, redusername);
        }
    }
}
